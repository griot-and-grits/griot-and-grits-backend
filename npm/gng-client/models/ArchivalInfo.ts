/* tslint:disable */
/* eslint-disable */
/**
 * Griot and Grits API
 * Griot and Grits API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ArchivalInfo
 */
export interface ArchivalInfo {
    /**
     * An exact date or estimate
     * @type {string}
     * @memberof ArchivalInfo
     */
    creationDate: string;
    /**
     * 
     * @type {string}
     * @memberof ArchivalInfo
     */
    checksum?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ArchivalInfo
     */
    storageLocation?: string | null;
}

/**
 * Check if a given object implements the ArchivalInfo interface.
 */
export function instanceOfArchivalInfo(value: object): value is ArchivalInfo {
    if (!('creationDate' in value) || value['creationDate'] === undefined) return false;
    return true;
}

export function ArchivalInfoFromJSON(json: any): ArchivalInfo {
    return ArchivalInfoFromJSONTyped(json, false);
}

export function ArchivalInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ArchivalInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'creationDate': json['creation_date'],
        'checksum': json['checksum'] == null ? undefined : json['checksum'],
        'storageLocation': json['storage_location'] == null ? undefined : json['storage_location'],
    };
}

export function ArchivalInfoToJSON(json: any): ArchivalInfo {
    return ArchivalInfoToJSONTyped(json, false);
}

export function ArchivalInfoToJSONTyped(value?: ArchivalInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'creation_date': value['creationDate'],
        'checksum': value['checksum'],
        'storage_location': value['storageLocation'],
    };
}

