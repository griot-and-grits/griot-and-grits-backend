/* tslint:disable */
/* eslint-disable */
/**
 * Griot and Grits API
 * Griot and Grits API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Duration } from './Duration';
import {
    DurationFromJSON,
    DurationFromJSONTyped,
    DurationToJSON,
    DurationToJSONTyped,
} from './Duration';

/**
 * 
 * @export
 * @interface VideoMetadata
 */
export interface VideoMetadata {
    /**
     * 
     * @type {Duration}
     * @memberof VideoMetadata
     */
    duration?: Duration | null;
    /**
     * 
     * @type {number}
     * @memberof VideoMetadata
     */
    fileSizeMb?: number | null;
    /**
     * 
     * @type {string}
     * @memberof VideoMetadata
     */
    format?: string | null;
    /**
     * 
     * @type {number}
     * @memberof VideoMetadata
     */
    resolutionHeight?: number | null;
    /**
     * 
     * @type {number}
     * @memberof VideoMetadata
     */
    resolutionWidth?: number | null;
    /**
     * 
     * @type {number}
     * @memberof VideoMetadata
     */
    frameRate?: number | null;
    /**
     * 
     * @type {string}
     * @memberof VideoMetadata
     */
    codec?: string | null;
}

/**
 * Check if a given object implements the VideoMetadata interface.
 */
export function instanceOfVideoMetadata(value: object): value is VideoMetadata {
    return true;
}

export function VideoMetadataFromJSON(json: any): VideoMetadata {
    return VideoMetadataFromJSONTyped(json, false);
}

export function VideoMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): VideoMetadata {
    if (json == null) {
        return json;
    }
    return {
        
        'duration': json['duration'] == null ? undefined : DurationFromJSON(json['duration']),
        'fileSizeMb': json['file_size_mb'] == null ? undefined : json['file_size_mb'],
        'format': json['format'] == null ? undefined : json['format'],
        'resolutionHeight': json['resolution_height'] == null ? undefined : json['resolution_height'],
        'resolutionWidth': json['resolution_width'] == null ? undefined : json['resolution_width'],
        'frameRate': json['frame_rate'] == null ? undefined : json['frame_rate'],
        'codec': json['codec'] == null ? undefined : json['codec'],
    };
}

export function VideoMetadataToJSON(json: any): VideoMetadata {
    return VideoMetadataToJSONTyped(json, false);
}

export function VideoMetadataToJSONTyped(value?: VideoMetadata | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'duration': DurationToJSON(value['duration']),
        'file_size_mb': value['fileSizeMb'],
        'format': value['format'],
        'resolution_height': value['resolutionHeight'],
        'resolution_width': value['resolutionWidth'],
        'frame_rate': value['frameRate'],
        'codec': value['codec'],
    };
}

