/* tslint:disable */
/* eslint-disable */
/**
 * Griot and Grits API
 * Griot and Grits API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Artifact,
  HTTPValidationError,
} from '../models/index';
import {
    ArtifactFromJSON,
    ArtifactToJSON,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
} from '../models/index';

export interface NewArtifactArtifactsPostRequest {
    artifact: Artifact;
}

/**
 * 
 */
export class ArtifactsApi extends runtime.BaseAPI {

    /**
     * New Artifact
     */
    async newArtifactArtifactsPostRaw(requestParameters: NewArtifactArtifactsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters['artifact'] == null) {
            throw new runtime.RequiredError(
                'artifact',
                'Required parameter "artifact" was null or undefined when calling newArtifactArtifactsPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/artifacts/`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ArtifactToJSON(requestParameters['artifact']),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * New Artifact
     */
    async newArtifactArtifactsPost(requestParameters: NewArtifactArtifactsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.newArtifactArtifactsPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
